---
import { getLocale } from 'astro-i18n-aut';
import { localedURL, t } from 'src/utils/i18n.ts';
import ServicesCategoryButton from 'src/components/grid/ServicesCategoryButton.astro';
import { Prepr } from 'src/utils/prepr';
import Grid from 'src/layouts/Grid.astro';
import Block from 'src/components/grid/Block.astro';
import Button from 'src/components/grid/Button.astro';
import GetVacancyBySlug from 'src/queries/get-vacancy-by-slug';
import NotFound from 'src/pages/404.astro';

const locale = getLocale(Astro.url);
const localedData = t(locale).services.vacancies;

const response = await Prepr(GetVacancyBySlug(locale, Astro.params.slug ?? ''));
const { data } = await response.json();
const vacancy = data.Vacancy;

if (vacancy?.body) {
  vacancy.body.map((e: any) => {
    if (e.__typename === 'Text') {
      e.body = e.body.replaceAll('<p', '<p class="mb-3" ');
      e.body = e.body.replaceAll(
        '<h2',
        '<h2 class="mb-5 mt-10 text-center text-3xl font-semibold" '
      );
      e.body = e.body.replaceAll(
        '<h3',
        '<h3 class="mb-5 mt-10 text-center text-2xl font-semibold" '
      );
      e.body = e.body.replaceAll(
        '<h4',
        '<h4 class="mb-5 mt-10 text-center text-xl font-semibold" '
      );
      e.body = e.body.replaceAll(
        '<h5',
        '<h5 class="mb-5 mt-10 text-center text-lg font-semibold" '
      );
      e.body = e.body.replaceAll(
        '<h6',
        '<h6 class="mb-5 mt-10 text-center text-base font-semibold" '
      );
      e.body = e.body.replaceAll('<ul', '<ul class="list-disc pl-5 mb-5" ');
      e.body = e.body.replaceAll('<ol', '<ol class="list-decimal pl-5" ');
      e.body = e.body.replaceAll('<a', '<a class="underline text-cyan-600" ');
      e.body = e.body.replaceAll(
        '<table',
        '<table class="border-collapse border border-slate-500 mt-10 mb-5" '
      );
      e.body = e.body.replaceAll('<th', '<th class="border border-slate-600" ');
      e.body = e.body.replaceAll('<td', '<td class="border border-slate-700" ');
    }
    return e;
  });
}
---

{
  vacancy ? (
    <Grid
      title={vacancy.title ? `${vacancy.title} | ${localedData.title}` : ''}
      description={vacancy.description ?? ''}
    >
      <Button path={localedURL(locale, '/services/vacancies')} title={localedData.content.back} />
      <ServicesCategoryButton category='delivery' />
      <ServicesCategoryButton category='components' />
      <ServicesCategoryButton category='seminars' />
      <ServicesCategoryButton category='vacancies' />
      <Block lg />
      <Block md lg />
      <div class='col-span-2 bg-white p-5 pt-12 md:col-span-4 md:px-12 lg:col-span-6'>
        <h1 class='mb-5 text-center text-4xl font-bold uppercase'>{vacancy.title}</h1>
        <>
          <div class='relative w-full'>
            <div class='absolute inset-x-0 h-full w-16 border-b-2 border-l-2 border-neutral-700' />
            <div class='flex w-full flex-col gap-4 py-6 pl-5 md:flex-row'>
              <img
                src={vacancy.image?.url ?? 'https://placehold.co/400?text=Missing Image'}
                height='150'
                width='150'
                class='mx-auto h-min object-cover'
              />
              <div class='w-full'>
                {vacancy.body?.map((e: any) => {
                  if (e.__typename === 'Text') {
                    return <Fragment set:html={e.body} />;
                  }
                  if (e.__typename === 'Assets') {
                    return <img src={e.items[0].url} />;
                  }
                  return null;
                }) ?? ''}
              </div>
              {vacancy.video?.mp4_medium && (
                <video
                  src={vacancy.video.mp4_medium}
                  width='300px'
                  height='700px'
                  muted
                  autoplay
                  loop
                  class='mx-auto mb-4'
                  controls
                />
              )}
            </div>
          </div>
        </>
      </div>
    </Grid>
  ) : (
    <NotFound />
  )
}

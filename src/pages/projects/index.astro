---
import { getLocale } from 'astro-i18n-aut';
import { t, localedURL } from '../../utils/i18n.ts';
import Grid from "../../layouts/Grid.astro";
import Block from "../../components/grid/Block.astro";
import ButtonWithItem from "../../components/grid/ButtonWithItem.astro";
import { Prepr } from "src/utils/prepr";
import GetProjects from "src/queries/get-projects";
import NotFound from "../404.astro";

const locale = getLocale(Astro.url);
const localedData = t(locale).projects;

let element = +(Astro.url.searchParams.get("element") ?? 1);
if (Number.isNaN(+element) || element <= 0) {
    element = 1;
}
const response = await Prepr(GetProjects(locale, element));
const { data } = await response.json();
const project = data.Projects.items[0] ?? null;
---

{project ? <Grid title={project?.title} description={localedData.description}>
  <!-- Grid Elements -->
  <Block mobile md lg />
  <div
    class='col-span-2 mb-3 justify-center px-5 pt-3 text-white md:col-span-4 md:mb-0 md:aspect-auto'
  >
    <h1 class='text-2xl font-semibold'>{project.title}</h1>
    <div class=''>
      <p class='flex flex-row items-center gap-3'>
        <img src='/icons/location.svg' width='20' height='20' alt='location' />
        {project.location}
      </p>
      <p class='flex flex-row items-center gap-3 text-sm'>
        <img src='/icons/glass.svg' width='20' height='20' alt='location' />
        {project.glasstype}
      </p>
      <p class='flex flex-row items-center gap-3'>
        <img src='/icons/calendar.svg' width='20' height='20' alt='location' />
        {project.year}
      </p>
    </div>
  </div>
  <Block lg />
  <Block lg />
  <a
    class='group col-span-2 mx-auto overflow-hidden'
    href={project.images[0].url}
    title={project.title}
    target='_blank'
  >
    <img
      src={project.images[0].url}
      alt={project.title}
      title={project.title}
      class='border-2 border-[#05151d] opacity-70 duration-300 group-hover:scale-110 group-hover:opacity-100'
    />
  </a>
  <a
    class='group col-span-2 mx-auto overflow-hidden'
    href={project.images[1].url}
    title={project.title}
    target='_blank'
  >
    <img
      src={project.images[1].url}
      alt={project.title}
      title={project.title}
      class='border-2 border-[#05151d] opacity-70 duration-300 group-hover:scale-110 group-hover:opacity-100'
    />
  </a>
  <a
    class='group col-span-2 mx-auto overflow-hidden'
    href={project.images[2].url}
    title={project.title}
    target='_blank'
  >
    <img
      src={project.images[2].url}
      alt={project.title}
      title={project.title}
      class='border-2 border-[#05151d] opacity-70 duration-300 group-hover:scale-110 group-hover:opacity-100'
    />
  </a>
  <Block md lg />
  <Block lg />
  <Block lg />
  {
    element > 1 ? (
      <ButtonWithItem path={localedURL(locale, `/projects?element=${Math.max(element - 1, 1)}`)}>
        <img src='/icons/left.svg' alt='left arrow' />
      </ButtonWithItem>
    ) : (
      <Block mobile md lg />
    )
  }
  <Block md lg />
  <Block md lg />
  {
    data.Projects.items.length > 1 && (
      <ButtonWithItem path={localedURL(locale, `/projects?element=${+element + 1}`)}>
        <img src='/icons/right.svg' alt='right arrow' />
      </ButtonWithItem>
    )
  }
</Grid> : <NotFound/>}
